var S=(e,l,t)=>new Promise((L,a)=>{var i=s=>{try{r(t.next(s))}catch(o){a(o)}},n=s=>{try{r(t.throw(s))}catch(o){a(o)}},r=s=>s.done?L(s.value):Promise.resolve(s.value).then(i,n);r((t=t.apply(e,l)).next())});import{$ as C,u as O}from"./vendor.19bf757c.js";import{b as R,d as u}from"./index.9b7e9a93.js";var f;(function(e){e[e.REFRESH=0]="REFRESH",e[e.CLOSE_ALL=1]="CLOSE_ALL",e[e.CLOSE_LEFT=2]="CLOSE_LEFT",e[e.CLOSE_RIGHT=3]="CLOSE_RIGHT",e[e.CLOSE_OTHER=4]="CLOSE_OTHER",e[e.CLOSE_CURRENT=5]="CLOSE_CURRENT",e[e.CLOSE=6]="CLOSE"})(f||(f={}));function p(e){const l=R(),t=u();function L(){const{show:s}=l.getMultiTabsSetting;if(!s)throw new Error("the multi-tab page is not open,please open it in the setting");return s}const a=e||C(),{currentRoute:i}=a;function n(){const s=O(i);return t.getTabList.find(o=>o.path===s.path)}function r(s,o){return S(this,null,function*(){if(!L())return;const c=n();switch(s){case 0:yield t.refreshPage(a);break;case 1:yield t.closeAllTabs(a);break;case 2:yield t.closeLeftTabs(c,a);break;case 3:yield t.closeRightTabs(c,a);break;case 4:yield t.closeOtherTabs(c,a);break;case 5:case 6:yield t.closeTab(o||c,a);break}})}return{refreshPage:()=>r(0),closeAll:()=>r(1),closeLeft:()=>r(2),closeRight:()=>r(3),closeOther:()=>r(4),closeCurrent:s=>r(5,s),close:s=>r(6,s)}}export{p as u};
